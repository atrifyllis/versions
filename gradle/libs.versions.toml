[versions]
hibernateTypes = "2.21.1"
jmolecules = "1.6.0"
jmoleculesIntegrations = "1.6.0"
oktaSpring = "3.0.2"
kotlin = "1.8.20-Beta"
kotlinLogging = "3.0.4"
mapStruct = "1.5.3.Final"
openapi = "1.6.14"
openapi2 = "2.0.2"
openapiGradlePlugin = "1.6.0"
gradleLogger = "3.2.0"
springBoot = "3.0.3"
springDepManagement = "1.1.0"
sonarqube = "4.0.0.2929"
versionChecker = "0.44.0"
ff4j = "1.9"
archUnit = "1.0.1"
jMoleculesArchUnit = "1.0.0"
native = "0.9.19"
kover = "0.6.1"


[libraries]
hibernateTypes = { module = "com.vladmihalcea:hibernate-types-60", version.ref = "hibernateTypes" }

jmoleculesDdd = { module = "org.jmolecules:kmolecules-ddd", version.ref = "jmolecules" }
jmoleculesEvents = { module = "org.jmolecules:jmolecules-events", version.ref = "jmolecules" }
jmoleculesSpring = { module = "org.jmolecules.integrations:jmolecules-spring", version.ref = "jmoleculesIntegrations" }
jmoleculesJackson = { module = "org.jmolecules.integrations:jmolecules-jackson", version.ref = "jmoleculesIntegrations" }

oktaSpring = { module = "com.okta.spring:okta-spring-boot-starter", version.ref = "oktaSpring" }

kotlinLogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }

mapStruct = { module = "org.mapstruct:mapstruct", version.ref = "mapStruct" }
mapStructProcessor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapStruct" }

openapiUi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "openapi2" }
openapiKotlin = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "openapi2" }

ff4jSpring = { module = "org.ff4j:ff4j-spring-boot-starter", version.ref = "ff4j" }
ff4jWeb = { module = "org.ff4j:ff4j-web", version.ref = "ff4j" }
ff4jSpringJdbc = { module = "org.ff4j:ff4j-store-springjdbc", version.ref = "ff4j" }

archUnit = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archUnit" }
jMoleculesArchUnit = { module = "org.jmolecules:jmolecules-archunit", version.ref = "jMoleculesArchUnit" }

[bundles]
jmolecules = ["jmoleculesDdd", "jmoleculesEvents", "jmoleculesSpring", "jmoleculesJackson"]
openApi = ["openapiUi", "openapiKotlin"]
ff4j = ["ff4jSpring", "ff4jWeb", "ff4jSpringJdbc"]
archUnit = ["archUnit", "jMoleculesArchUnit"]

[plugins]
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDepManagement = { id = "io.spring.dependency-management", version.ref = "springDepManagement" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinKapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlinPluginSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinPluginJpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
openapi = { id = "org.springdoc.openapi-gradle-plugin", version.ref = "openapiGradlePlugin" }
gradlePrettyLogger = { id = "com.adarshr.test-logger", version.ref = "gradleLogger" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
versionChecker = { id = "com.github.ben-manes.versions", version.ref = "versionChecker" }
native = { id = "org.graalvm.buildtools.native", version.ref = "native" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }



